{"version":3,"sources":["components/AddCategory.js","helpers/getGifs.js","components/GifGridItem.js","components/GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","categories","type","value","onChange","target","getGifs","category","a","url","encodeURI","fetch","resp","json","data","gifs","map","img","id","title","images","downsized_medium","GifGridItem","className","src","alt","GifGrid","loading","state","setState","useEffect","then","imgs","useFetchGifs","GifExpertApp","ReactDOM","render","document","getElementById"],"mappings":"2LAGaA,EAAc,SAAC,GAAuB,IAArBC,EAAoB,EAApBA,cAAoB,EAEVC,mBAAS,IAFC,mBAEvCC,EAFuC,KAE3BC,EAF2B,KAiB9C,OACI,sBAAMC,SAVW,SAACC,GAClBA,EAAEC,iBACCJ,EAAWK,OAAOC,OAAS,IAC1BR,GAAc,SAAAS,GAAU,OAAKP,GAAL,mBAAoBO,OAC5CN,EAAc,MAMlB,SACI,uBACIO,KAAK,OACLC,MAAOT,EACPU,SAlBc,SAACP,GACvBF,EAAcE,EAAEQ,OAAOF,a,+BCLlBG,EAAO,uCAAG,WAAMC,GAAN,uBAAAC,EAAA,6DACbC,EADa,iDACmCC,UAAUH,GAD7C,+DAEAI,MAAMF,GAFN,cAEbG,EAFa,gBAGIA,EAAKC,OAHT,uBAGXC,EAHW,EAGXA,KACFC,EAAOD,EAAKE,KAAI,SAAAC,GAClB,MAAO,CACHC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXV,IAAKQ,EAAIG,OAAOC,iBAAiBZ,QARtB,kBAWZM,GAXY,4CAAH,sDCSLO,MAVf,YAA0C,IAAnBJ,EAAkB,EAAlBA,GAAIC,EAAc,EAAdA,MAAOV,EAAO,EAAPA,IAE9B,OACI,sBAAKc,UAAU,2CAAf,UACI,qBAAcC,IAAKf,EAAKgB,IAAKN,GAAnBD,GACV,4BAAIC,QCuBDO,EA1BC,SAAC,GAAkB,IAAhBnB,EAAe,EAAfA,SAAe,ECCN,SAACA,GAAc,IAAD,EAEZd,mBAAS,CAC/BqB,KAAM,GACNa,SAAS,IAJyB,mBAE/BC,EAF+B,KAExBC,EAFwB,KAmBtC,OAZAC,qBAAU,WAENxB,EAAQC,GACHwB,MAAK,SAAAC,GACFH,EAAS,CACLf,KAAMkB,EACNL,SAAS,SAItB,CAACpB,IAEGqB,EDlB0BK,CAAa1B,GAAjCa,EAFiB,EAEtBN,KAAaa,EAFS,EAETA,QAErB,OACI,qCACI,oBAAIJ,UAAU,sCAAd,SAAqDhB,IAEjDoB,GAAW,mBAAGJ,UAAU,mCAAb,wBAEf,qBAAKA,UAAU,YAAf,SAGYH,EAAOJ,KAAI,SAAAC,GAAG,OACV,cAAC,EAAD,eAEQA,GADCA,EAAIC,aEf5BgB,EAAe,WAAO,IAAD,EAEMzC,mBAAS,CAAC,cAFhB,mBAEvBQ,EAFuB,KAEXT,EAFW,KAS9B,OACI,qCACI,gDACA,cAAC,EAAD,CAAaA,cAAeA,IAC5B,uBACA,6BAEQS,EAAWe,KAAI,SAAAT,GAAQ,OACnB,cAAC,EAAD,CACIA,SAAUA,GACLA,Y,MClBjC4B,IAASC,OAAO,cAAC,EAAD,IACdC,SAASC,eAAe,W","file":"static/js/main.0d7e451e.chunk.js","sourcesContent":["import React, { useState } from 'react'\nimport PropTypes from 'prop-types';\n\nexport const AddCategory = ({ setCategories }) => {\n\n    const [inputValue, setInputValue] = useState('');\n\n    const handleInputChange = (e) => {\n        setInputValue(e.target.value);\n    };\n\n    const handleSubmit = (e) => {\n        e.preventDefault();\n        if(inputValue.trim().length > 2) {\n            setCategories(categories => [inputValue, ...categories]);\n            setInputValue('');\n        }\n\n    }\n\n    return (\n        <form onSubmit={handleSubmit}>\n            <input \n                type='text'\n                value={inputValue}\n                onChange={handleInputChange}\n            />   \n        </form>\n    )\n};\n\nAddCategory.propTypes = {\n    setCategories: PropTypes.func.isRequired,\n}\n","\n\n\nexport const getGifs = async(category) => {\n    const url = `https://api.giphy.com/v1/gifs/search?q=${encodeURI(category)}&limit=10&api_key=ZAQyfdxwkKqhDyH9hEvsPg1Vq93gGGYw`;\n    const resp = await fetch(url);\n    const { data } = await resp.json();\n    const gifs = data.map(img => {\n        return {\n            id: img.id,\n            title: img.title,\n            url: img.images.downsized_medium.url,\n        }\n    })\n    return gifs;\n}","import React from 'react'\n\nfunction GifGridItem({ id, title, url }) {\n\n    return (\n        <div className='card animate__animated animate__fadeInUp' >\n            <img key={id} src={url} alt={title} />\n            <p>{title}</p>\n        </div>\n    )\n}\n\nexport default GifGridItem\n","import React from 'react'\nimport { useFetchGifs } from '../hooks/useFetchGifs';\nimport GifGridItem from './GifGridItem';\n\nconst GifGrid = ({ category }) => {\n\n    const { data:images, loading } = useFetchGifs(category);\n    \n    return (\n        <>\n            <h3 className='animate__animated animate__fadeInUp'>{category}</h3>\n            {\n                loading && <p className='animate__animated animate__flash'>Loading...</p>\n            }\n            <div className='card-grid'>\n                \n                    {\n                        images.map(img => (\n                            <GifGridItem\n                                key={img.id}\n                                {...img}                            \n                            />\n                        ))\n                    }\n                \n            </div>\n        </>\n    )\n}\n\nexport default GifGrid\n","import { useEffect, useState } from \"react\"\nimport { getGifs } from \"../helpers/getGifs\";\n\n\n\nexport const useFetchGifs = (category) => {\n\n    const [state, setState] = useState({\n        data: [],\n        loading: true,\n    });\n\n    useEffect(() => {\n\n        getGifs(category)\n            .then(imgs => {\n                setState({\n                    data: imgs,\n                    loading: false,\n                })\n            })\n\n    }, [category])\n\n    return state;\n\n\n\n}","import React, { useState } from 'react'\nimport { AddCategory } from './components/AddCategory';\nimport GifGrid from './components/GifGrid';\n\nexport const GifExpertApp = () => {\n    \n    const [categories, setCategories] = useState(['One Punch']);\n\n    // const handleAdd = () => {\n    //     setCategories([...categories, 'Seinfeld'])\n    //     // setCategories(categories.concat(['Seinfeld']))\n    // }\n\n    return (\n        <>\n            <h2>Gif Expert App</h2>\n            <AddCategory setCategories={setCategories} />\n            <hr />\n            <ol>\n                {\n                    categories.map(category => (\n                        <GifGrid \n                            category={category}\n                            key={category}\n                        />\n                    )\n                )}\n            </ol>\n        </>\n    )\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { GifExpertApp } from './GifExpertApp';\nimport './index.css';\n\nReactDOM.render(<GifExpertApp />,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}